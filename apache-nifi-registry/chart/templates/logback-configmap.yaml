---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nifi-registry-logback
  labels:
    app: {{ include "nifireg.fullname" . | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
data:
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration scan="true" scanPeriod="30 seconds">
        <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
            <resetJUL>true</resetJUL>
        </contextListener>

        <appender name="APP_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${org.apache.nifi.registry.bootstrap.config.log.dir}/nifi-registry-app.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${org.apache.nifi.registry.bootstrap.config.log.dir}/nifi-registry-app_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>
                <maxFileSize>100MB</maxFileSize>
                <maxHistory>14</maxHistory>
                <totalSizeCap>3GB</totalSizeCap>
            </rollingPolicy>
            <immediateFlush>true</immediateFlush>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="BOOTSTRAP_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${org.apache.nifi.registry.bootstrap.config.log.dir}/nifi-registry-bootstrap.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!--
                  For daily rollover, use 'user_%d.log'.
                  For hourly rollover, use 'user_%d{yyyy-MM-dd_HH}.log'.
                  To GZIP rolled files, replace '.log' with '.log.gz'.
                  To ZIP rolled files, replace '.log' with '.log.zip'.
                -->
                <fileNamePattern>${org.apache.nifi.registry.bootstrap.config.log.dir}/nifi-registry-bootstrap_%d.log</fileNamePattern>
                <!-- keep 5 log files worth of history -->
                <maxHistory>5</maxHistory>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="EVENTS_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${org.apache.nifi.registry.bootstrap.config.log.dir}/nifi-registry-event.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${org.apache.nifi.registry.bootstrap.config.log.dir}/nifi-registry-event_%d.log.gz</fileNamePattern>
                <!-- keep 5 log files worth of history -->
                <maxHistory>5</maxHistory>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%date ## %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%date %level [%thread] %logger{40} %msg%n</pattern>
            </encoder>
        </appender>

        <!-- valid logging levels: TRACE, DEBUG, INFO, WARN, ERROR -->

        <logger name="org.apache.nifi.registry" level="DEBUG"/>

        <!-- To see SQL statements set this to DEBUG -->
        <logger name="org.hibernate.SQL" level="DEBUG" />
        <!-- To see the values in SQL statements set this to TRACE -->
        <logger name="org.hibernate.type" level="INFO" />

        <!--
            Logger for capturing Bootstrap logs and NiFi Registry's standard error and standard out.
        -->
        <logger name="org.apache.nifi.registry.bootstrap" level="INFO" additivity="false">
            <appender-ref ref="BOOTSTRAP_FILE" />
        </logger>
        <logger name="org.apache.nifi.registry.bootstrap.Command" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="BOOTSTRAP_FILE" />
        </logger>

        <!-- Everything written to NiFi Registry's Standard Out will be logged with the logger org.apache.nifi.StdOut at INFO level -->
        <logger name="org.apache.nifi.registry.StdOut" level="DEBUG" additivity="false">
            <appender-ref ref="BOOTSTRAP_FILE" />
        </logger>

        <!-- Everything written to NiFi Registry's Standard Error will be logged with the logger org.apache.nifi.StdErr at ERROR level -->
        <logger name="org.apache.nifi.registry.StdErr" level="ERROR" additivity="false">
            <appender-ref ref="BOOTSTRAP_FILE" />
        </logger>

        <!-- This will log all events to a separate file when the LoggingEventHookProvider is enabled in providers.xml -->
        <logger name="org.apache.nifi.registry.provider.hook.LoggingEventHookProvider" level="INFO" additivity="false">
            <appender-ref ref="EVENTS_FILE" />
        </logger>

        <root level="DEBUG">
            <appender-ref ref="APP_FILE"/>
        </root>

    </configuration>
